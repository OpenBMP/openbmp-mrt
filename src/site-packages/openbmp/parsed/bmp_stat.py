"""openbmp.parsed.bmp_stat class

  Copyright (c) 2013-2016 Cisco Systems, Inc. and others.  All rights reserved.
  This program and the accompanying materials are made available under the
  terms of the Eclipse Public License v1.0 which accompanies this distribution,
  and is available at http://www.eclipse.org/legal/epl-v10.html

  .. moduleauthor:: Tim Evens <tievens@cisco.com>
"""

class bmp_stat:
    """ Format class for bmp stat parsed messages

        Schema Version: 1

        This class parses the TSV so that fields can be used by name

    """
    VALUES = []
    FIELD_COUNT = 17

    def __init__(self):
        """ Constructor
        """
        pass

    def parse(self, row):
        """ Parses the row in TSV format

        :param row:     TSV row to be parsed and loaded into class

        :raise: NameError with error message on error
        """
        self.VALUES = row.split('\t')

        if len(self.VALUES) != self.FIELD_COUNT:
            raise NameError("Invalid field length of %d, expected %d" % (len(self.VALUES), self.FIELD_COUNT))

    def getAction(self):
        return self.VALUES[0]

    def getSeqence(self):
        return int(self.VALUES[1])

    def getRouterHashId(self):
        return self.VALUES[2]

    def getRouterIp(self):
        return self.VALUES[3]

    def getPeerHashId(self):
        return self.VALUES[4]

    def getPeerIp(self):
        return self.VALUES[5]

    def getPeerAsn(self):
        try:
            return int(self.VALUES[6])
        except:
            return 0

    def getTimestamp(self):
        return self.VALUES[7]

    def getRejectedPrefixes(self):
        return int(self.VALUES[8])

    def getKnownDupPrefixes(self):
        return int(self.VALUES[9])

    def getKnownDupWithdrawPrefixes(self):
        return int(self.VALUES[10])

    def getInvalidClusterListPrefixes(self):
        return int(self.VALUES[11])

    def getInvalidAsPathPrefixes(self):
        return int(self.VALUES[12])

    def getInvalidOriginatorIdPrefixes(self):
        return int(self.VALUES[13])

    def getInvalidAsConffedPrefixes(self):
        return int(self.VALUES[14])

    def getPrePolicyPrefixes(self):
        return int(self.VALUES[15])

    def getPostPolicyPrefixes(self):
        return int(self.VALUES[16])

