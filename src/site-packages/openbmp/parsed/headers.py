"""openbmp.parsed.headers  class

  Copyright (c) 2013-2016 Cisco Systems, Inc. and others.  All rights reserved.
  This program and the accompanying materials are made available under the
  terms of the Eclipse Public License v1.0 which accompanies this distribution,
  and is available at http://www.eclipse.org/legal/epl-v10.html

  .. moduleauthor:: Tim Evens <tievens@cisco.com>
"""


class headers:
    """ Format class for headers parsed messages

        Schema Version: 1

        This class parses the TSV so that fields can be used by name

    """
    c_hash_id = None
    r_hash = ""
    r_ip = ""
    data_len = 0
    row_count = 0

    def __init__(self):
        """ Constructor
        """
        pass

    def parse(self, msg_headers):
        """ Parses the row in TSV format

        :param msg_headers:     Headers portion of message (should not contain data)

        :raise: NameError with error message on error
        """
        try:
            for l in msg_headers.split('\n'):
                (var, val) = l.split(':', 1)
                var = var.strip()
                val = val.strip()

                if var.lower() == "c_hash_id":
                    self.c_hash_id = val

                elif var.lower() == "l":
                    self.data_len = int(val)

                elif var.lower() == "r":
                    self.row_count = int(val)

                elif var.lower() == 'r_hash':
                    self.r_hash = val

                elif var.lower() == 'r_ip':
                    self.r_ip = val
        except:
            raise NameError("Invalid set of headers, can not process message")

    def getCollectorHashId(self):
        return self.c_hash_id

    def getDataLength(self):
        return self.data_len

    def getRowCount(self):
        return self.row_count

    def getRouterIp(self):
        return self.r_ip

    def getRouterHashId(self):
        return self.r_hash
